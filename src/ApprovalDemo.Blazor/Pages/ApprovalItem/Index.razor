@page "/approval-items"
@using Volo.Abp.Application.Dtos
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Components.Web
@using ApprovalDemo.Localization
@using ApprovalDemo.ApprovalItems

@inject IStringLocalizer<ApprovalDemoResource> L
@inherits AbpCrudPageBase<IApprovalItemAppService, ApprovalItemDto, int, PagedAndSortedResultRequestDto, ApprovalDemo.ApprovalItems.UpdateApprovalItemDto>
@inject AbpBlazorMessageLocalizerHelper<ApprovalDemoResource> LH

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Approval Items"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Color.Primary"
                        Clicked="OpenCreateModalAsync">Add item</Button>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="ApprovalItemDto"
                  Data="Entities"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridEntityActionsColumn TItem="ApprovalItemDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="ApprovalItemDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="ApprovalItemDto"
                                          Text="@L["Edit"]"
                                          Clicked="() => OpenEditModalAsync(context)" />

                            <EntityAction TItem="ApprovalItemDto"
                                          Text="@L["Delete"]"
                                          Clicked="() => DeleteEntityAsync(context)"
                                          ConfirmationMessage="() => GetDeleteConfirmationMessage(context)" />
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
                <DataGridColumn TItem="ApprovalItemDto"
                                Field="@nameof(ApprovalItemDto.Name)"
                                Caption="@L["Name"]">
                    <DisplayTemplate>
                        <a href="/approval-items/@context.Id">@context.Name</a>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ApprovalItemDto"
                                Field="@nameof(ApprovalItemDto.Description)"
                                Caption="Description">
                    <DisplayTemplate>
                        @(context.IsHot ? "Yes" : "No")
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ApprovalItemDto"
                                Field="@nameof(ApprovalItemDto.Description)"
                                Caption="Description">
                </DataGridColumn>
                <DataGridColumn TItem="ApprovalItemDto"
                                Field="@nameof(ApprovalItemDto.Status)"
                                Caption="@L["Type"]">
                    <DisplayTemplate>
                        @context.Status.ToString()
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ApprovalItemDto"
                                Field="@nameof(ApprovalItemDto.CreationTime)"
                                Caption="@L["CreationTime"]">
                    <DisplayTemplate>
                        @context.CreationTime.ToLongDateString()
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="@CreateModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewBook"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>Name</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>

                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>Description</FieldLabel>
                            <MemoEdit Rows="5" @bind-Text="@NewEntity.Description">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </MemoEdit>
                        </Field>
                    </Validation>

                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>Is Hot</FieldLabel>
                            <Switch TValue="bool" @bind-Checked="NewEntity.IsHot" />
                        </Field>
                    </Validation>

                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateModalAsync">@L["Cancel"]</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="@EditModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@EditingEntity.Name</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@EditingEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingEntity.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>Description</FieldLabel>
                            <MemoEdit Rows="5" @bind-Text="@EditingEntity.Description">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </MemoEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>Is Hot</FieldLabel>
                            <Switch TValue="bool" @bind-Checked="EditingEntity.IsHot" />
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditModalAsync">@L["Cancel"]</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>